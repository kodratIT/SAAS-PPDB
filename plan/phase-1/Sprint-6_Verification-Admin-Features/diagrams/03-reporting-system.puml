@startuml reporting-system
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Sequence.puml

title Reporting System - Sprint 6

' === SUB-DIAGRAM 1: Report Generation Flow ===
participant "Admin" as Admin
participant "Report UI" as UI
participant "API" as API
participant "Report\nGenerator" as Generator
participant "Firestore" as DB

Admin -> UI: Select report type
Admin -> UI: Set date range
Admin -> UI: Choose format (PDF/Excel)
Admin -> UI: Click "Generate"

UI -> API: POST /api/reports/generate
note right
  {
    type: 'applications',
    format: 'pdf',
    dateFrom: '2024-01-01',
    dateTo: '2024-12-31',
    filters: {...}
  }
end note

API -> DB: Query applications\nWITH filters
DB --> API: Filtered data

API -> Generator: Generate report

alt Format = PDF
  Generator -> Generator: Create PDF document
  Generator -> Generator: Add header (school info, date)
  Generator -> Generator: Add table (data rows)
  Generator -> Generator: Add footer (total, signature)
  Generator --> API: PDF blob
  
else Format = Excel
  Generator -> Generator: Create workbook
  Generator -> Generator: Add worksheet
  Generator -> Generator: Format cells
  Generator -> Generator: Add data rows
  Generator --> API: XLSX blob
end

API --> UI: Download URL / blob
UI --> Admin: Download file

@enduml

'===============================================
' SUB-DIAGRAM 2: Report Types
'===============================================
@startuml report-types
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Available Report Types

Container_Boundary(reports, "Report System") {
  Component(app_report, "Application Report", "Report", "All applications with filters")
  Component(payment_report, "Payment Report", "Report", "Payment transactions")
  Component(user_report, "User Report", "Report", "Registered users")
  Component(stats_report, "Statistics Report", "Report", "Aggregate statistics")
  Component(custom_report, "Custom Report", "Report", "User-defined fields")
}

Container_Boundary(exporters, "Export Engines") {
  Component(pdf, "PDF Exporter", "Library", "jsPDF + autotable")
  Component(excel, "Excel Exporter", "Library", "xlsx")
  Component(csv, "CSV Exporter", "Native", "Simple CSV")
}

Container(storage, "Cloud Storage", "Storage", "Generated reports archive")

Rel(app_report, pdf, "can export to")
Rel(app_report, excel, "can export to")
Rel(app_report, csv, "can export to")

Rel(payment_report, pdf, "can export to")
Rel(payment_report, excel, "can export to")

Rel(user_report, excel, "can export to")
Rel(user_report, csv, "can export to")

Rel(stats_report, pdf, "can export to")

Rel(custom_report, excel, "can export to")

Rel(pdf, storage, "saves to")
Rel(excel, storage, "saves to")

@enduml

'===============================================
' SUB-DIAGRAM 3: PDF Report Structure
'===============================================
@startuml pdf-structure
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title PDF Report Layout

rectangle "PDF Report Document" {
  rectangle "Header Section" {
    card "School Logo" as logo
    card "Report Title" as title
    card "School Name & Address" as school
    card "Report Date & Time" as date
  }
  
  rectangle "Filters Applied" {
    card "Date Range: 01 Jan - 31 Dec 2024" as filter1
    card "Status: All" as filter2
    card "Period: PPDB 2024/2025" as filter3
  }
  
  rectangle "Summary Statistics" {
    card "Total Records: 150" as total
    card "Approved: 100" as approved
    card "Rejected: 25" as rejected
    card "Pending: 25" as pending
  }
  
  rectangle "Data Table" {
    card "Headers: No | Name | NIK | Status | Date" as headers
    card "Row 1: 001 | John Doe | ... | Approved | ..." as row1
    card "Row 2: 002 | Jane Smith | ... | Pending | ..." as row2
    card "... (all records)" as rows
  }
  
  rectangle "Footer Section" {
    card "Page Numbers" as pages
    card "Generated by: {adminName}" as admin
    card "Printed: {timestamp}" as timestamp
  }
}

@enduml

'===============================================
' SUB-DIAGRAM 4: Excel Export Structure
'===============================================
@startuml excel-structure
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Excel Report Structure

rectangle "Excel Workbook" {
  rectangle "Summary Sheet" {
    card "Report Metadata" as meta
    card "Total Statistics" as stats
    card "Charts (optional)" as charts
  }
  
  rectangle "Data Sheet" {
    card "Column A: No. Pendaftaran" as col1
    card "Column B: Nama Lengkap" as col2
    card "Column C: NIK" as col3
    card "Column D: Email" as col4
    card "Column E: Phone" as col5
    card "Column F: Status" as col6
    card "Column G: Tanggal Daftar" as col7
    card "Column H: Verified By" as col8
    card "... (more columns)" as cols
    card "Rows: 1-1000 data" as rows
  }
  
  rectangle "Pivot Sheet (optional)" {
    card "Status Breakdown" as pivot1
    card "Daily Registrations" as pivot2
    card "Payment Summary" as pivot3
  }
}

note right of "Data Sheet"
  Features:
  - Freeze first row (headers)
  - Auto-filter enabled
  - Conditional formatting
  - Data validation
  - Formulas for totals
end note

@enduml
