@startuml PPDB_SaaS_Container_Diagram
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container Diagram - PPDB SaaS Platform Architecture

Person(user, "User", "Super Admin, School Admin, Panitia, Student")

System_Boundary(ppdb_platform, "PPDB SaaS Platform") {
    Container(web_app, "Web Application", "Next.js 14 (App Router), TypeScript, React", "Server-side rendered web application dengan App Router")
    
    Container(api_routes, "API Routes", "Next.js API Routes", "RESTful API endpoints untuk business logic")
    
    Container(auth_context, "Auth Context", "React Context API", "Global authentication state management")
    
    Container(ui_components, "UI Components", "shadcn/ui, Tailwind CSS", "Reusable UI component library")
    
    ContainerDb(client_state, "Client State", "React Context, React Query", "Client-side state management dan data caching")
}

System_Boundary(firebase_platform, "Firebase Platform") {
    ContainerDb(firestore_db, "Firestore Database", "NoSQL Cloud Database", "Multi-tenant data storage dengan security rules")
    
    Container(firebase_auth, "Firebase Auth", "Authentication Service", "Email/Password, Google OAuth, session management")
    
    ContainerDb(firebase_storage, "Firebase Storage", "Object Storage", "Document dan file storage dengan security rules")
    
    Container(cloud_functions, "Cloud Functions", "Node.js Serverless", "Background jobs, triggers, scheduled tasks (Sprint 2+)")
}

System_Ext(vercel, "Vercel Platform", "Hosting dan edge network untuk Next.js application")
System_Ext(github, "GitHub", "Version control dan CI/CD automation")
System_Ext(payment_gw, "Payment Gateway", "Midtrans/Xendit payment processing")
System_Ext(email_svc, "Email Service", "Transactional email delivery")

' User interactions
Rel(user, web_app, "Visits website, interacts", "HTTPS")

' Web app internal relationships
Rel(web_app, api_routes, "Calls API", "HTTP/Internal")
Rel(web_app, auth_context, "Manages auth state", "React Context")
Rel(web_app, ui_components, "Renders UI", "React Components")
Rel(web_app, client_state, "Manages state", "React Context/Query")

' API to Firebase
Rel(api_routes, firestore_db, "Read/Write data", "Firebase Admin SDK")
Rel(api_routes, firebase_auth, "Verify tokens, manage users", "Firebase Admin SDK")
Rel(api_routes, firebase_storage, "Upload/Download files", "Firebase Admin SDK")

' Client to Firebase
Rel(web_app, firebase_auth, "Login, register, OAuth", "Firebase Client SDK")
Rel(web_app, firestore_db, "Real-time data sync", "Firebase Client SDK")
Rel(web_app, firebase_storage, "Upload files", "Firebase Client SDK")

' External services
Rel(api_routes, payment_gw, "Process payments", "REST API")
Rel(api_routes, email_svc, "Send emails", "REST API")
Rel(cloud_functions, email_svc, "Send notifications", "REST API")

' Deployment
Rel(vercel, web_app, "Hosts", "Edge Network")
Rel(github, vercel, "Auto deploy", "GitHub Actions")
Rel(github, firebase_platform, "Deploy rules/functions", "GitHub Actions")

' Background processing
Rel(firestore_db, cloud_functions, "Triggers", "Firestore Triggers")

SHOW_LEGEND()

@enduml
