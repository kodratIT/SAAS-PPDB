@startuml document-upload-flow
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Sequence.puml

title Document Upload Flow - Sprint 5

' === SUB-DIAGRAM 1: Complete Upload Sequence ===
participant "Student" as Student
participant "FileUpload\nComponent" as Upload
participant "Image\nCompression" as Compress
participant "Firebase\nStorage" as Storage
participant "Firestore" as DB
participant "Application\nRecord" as App

Student -> Upload: Select/Drop file
Upload -> Upload: Validate file type
Upload -> Upload: Validate file size (<5MB)

alt File is image
  Upload -> Compress: Compress image
  Compress -> Compress: Resize to 1600px
  Compress -> Compress: Quality 80%
  Compress --> Upload: Compressed file (<1MB)
end

Upload -> Storage: Upload file
Storage -> Storage: Generate path:\napplications/{id}/{type}/{timestamp}
Storage --> Upload: Upload progress (0-100%)

Upload -> Upload: Update progress bar

Storage --> Upload: Download URL

Upload -> DB: Save document record
DB -> App: Update application.documents
App --> Student: Upload complete

@enduml

'===============================================
' SUB-DIAGRAM 2: File Validation Flow
'===============================================
@startuml file-validation
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Sequence.puml

title File Validation Logic

participant "FileUpload" as Upload
participant "Validator" as Validator

Upload -> Validator: validateFile(file)

Validator -> Validator: Check file type
alt Invalid type
  Validator --> Upload: Error: Format tidak didukung
  Upload --> Upload: Show error message
  return
end

Validator -> Validator: Check file size
alt Size > 5MB
  Validator --> Upload: Error: Ukuran maks 5MB
  Upload --> Upload: Show error message
  return
end

alt File is PDF
  Validator -> Validator: Validate PDF structure
  alt Corrupted PDF
    Validator --> Upload: Error: File rusak
    return
  end
end

Validator --> Upload: Validation passed

@enduml

'===============================================
' SUB-DIAGRAM 3: Storage Structure
'===============================================
@startuml storage-structure
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Firebase Storage Structure

Container_Boundary(storage, "Firebase Storage") {
  Component(apps, "applications/", "Folder")
  Component(app_id, "{applicationId}/", "Folder")
  
  Component(docs, "documents/", "Folder")
  Component(photo, "photo/", "Folder")
  Component(kartu, "kartu-keluarga/", "Folder")
  Component(ijazah, "ijazah/", "Folder")
  Component(akta, "akta-kelahiran/", "Folder")
  
  Component(file, "{timestamp}_{filename}", "File")
}

Rel(apps, app_id, "contains")
Rel(app_id, docs, "contains")
Rel(docs, photo, "contains")
Rel(docs, kartu, "contains")
Rel(docs, ijazah, "contains")
Rel(docs, akta, "contains")
Rel(photo, file, "contains")

note right of file
  Example path:
  applications/ABC123/
    photo/1697123456_photo.jpg
    kartu-keluarga/1697123457_kk.pdf
    ijazah/1697123458_ijazah.pdf
end note

@enduml
