@startuml Student_Registration_Flow

!define C4PlantUML https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master
!include C4PlantUML/C4_Sequence.puml

title Student Registration Flow - Complete Journey

Person(student, "Calon Siswa", "Student")
System(browser, "Browser", "React/Next.js")
System(landing, "Landing Page", "School Profile")
System(registration, "Registration Portal", "Multi-step wizard")
System(api, "API", "Next.js API Routes")
ContainerDb(firestore, "Firestore", "Database")
System(email_service, "Email Service", "Notifications")

== Discover School ==

student -> browser: Search for school\n"SMA Negeri 1 Jakarta"
browser -> landing: Visit /schools/sman1-jakarta
landing -> api: GET /api/schools/sman1-jakarta
api -> firestore: Get school data
firestore -> api: School profile + active periods
api -> landing: School info
landing -> student: Show school profile\n+ Active PPDB period

== View PPDB Information ==

student -> landing: View PPDB details
landing -> student: Show:\n- Timeline\n- Requirements\n- Quota\n- Fees\n- FAQ

student -> landing: Read requirements
landing -> student: Display:\n- Required documents\n- Eligibility criteria\n- Selection process

== Start Registration ==

student -> landing: Click "Daftar Sekarang"
landing -> browser: Check authentication
alt Not logged in
    browser -> student: Redirect to /login
    student -> browser: Login/Register
    browser -> registration: Redirect back to registration
else Already logged in
    browser -> registration: Go to registration
end

registration -> api: GET /api/forms/{periodId}
api -> firestore: Get form_configs
firestore -> api: Form configuration
api -> registration: Form structure

== Step 1: Personal Data ==

registration -> student: Show Step 1 form
student -> registration: Fill personal data:\n- Nama lengkap\n- NIK\n- NISN\n- Tempat/tanggal lahir\n- Jenis kelamin\n- Agama\n- Email\n- No. HP

registration -> registration: Validate with Zod:\n- NIK 16 digits\n- NISN 10 digits\n- Email format\n- Phone format

alt Validation fails
    registration -> student: Show error messages
    student -> registration: Fix errors
else Validation passes
    registration -> registration: Save to context
    registration -> registration: Trigger auto-save
    registration -> api: POST /api/drafts/save
    api -> firestore: Save draft
    registration -> student: Move to Step 2
end

== Step 2: Address & Location ==

registration -> student: Show Step 2 form
student -> registration: Enter address:\n- Jalan\n- RT/RW\n- Kelurahan\n- Kecamatan\n- Kota\n- Provinsi\n- Kode pos

student -> registration: Click "Pilih di Peta"
registration -> student: Show map picker

student -> registration: Click location on map
registration -> api: Geocode coordinates
api -> registration: Address details\n+ distance from school

registration -> registration: Calculate distance\nfrom school

registration -> registration: Validate address
registration -> student: Move to Step 3

== Step 3: Parent/Guardian Information ==

registration -> student: Show Step 3 form

student -> registration: Fill father info:\n- Nama\n- NIK\n- Pendidikan\n- Pekerjaan\n- Penghasilan\n- No. HP

student -> registration: Fill mother info:\n- Nama\n- NIK\n- Pendidikan\n- Pekerjaan\n- Penghasilan\n- No. HP

student -> registration: Fill guardian (optional):\n- Nama\n- Hubungan\n- NIK\n- Pekerjaan

registration -> registration: Validate all fields
registration -> student: Move to Step 4

== Step 4: Education History ==

registration -> student: Show Step 4 form

student -> registration: Fill education info:\n- Asal sekolah\n- NPSN sekolah\n- Tahun lulus\n- No. ijazah\n- Nilai rata-rata

student -> registration: Upload nilai rapor (optional)

registration -> registration: Validate grades
registration -> student: Move to Step 5

== Step 5: Achievements (Optional) ==

registration -> student: Show Step 5 form

student -> registration: Add achievement:\n- Jenis prestasi\n- Nama lomba\n- Tingkat (sekolah/kota/provinsi/nasional)\n- Peringkat\n- Tahun\n- Penyelenggara

student -> registration: Upload certificate

student -> registration: Add more achievements

registration -> student: Move to Review

== Review & Submit ==

registration -> student: Show all data for review

student -> registration: Review all information

alt Need to edit
    student -> registration: Click "Edit" on step
    registration -> student: Go back to that step
    student -> registration: Make changes
    registration -> student: Back to review
end

student -> registration: Check "Setuju dengan\nketentuan yang berlaku"

student -> registration: Click "Submit"

registration -> registration: Final validation

registration -> api: POST /api/applications\n{all form data}

api -> api: Validate:\n- Form complete\n- No duplicate\n- Period still active\n- Quota available

api -> api: Generate registration number

api -> firestore: Create application document
firestore -> api: Application created

api -> firestore: Delete draft
firestore -> api: Draft deleted

api -> email_service: Send confirmation email
email_service -> student: Confirmation email

api -> registration: Application created\n{registrationNumber}

registration -> student: Show success page:\n- Registration number\n- Next steps\n- Payment info

note right of api
  **Application Document:**
  
  {
    id: "app-xyz",
    schoolId: "school-a",
    periodId: "period-1",
    userId: "user-123",
    registrationNumber: "SMA1-2024-0001",
    status: "submitted",
    formData: {
      personal: {...},
      address: {...},
      parents: {...},
      education: {...},
      achievements: [...]
    },
    submittedAt: timestamp,
    createdAt: timestamp
  }
end note

note right of registration
  **Auto-Save:**
  - Triggers every 30 seconds
  - Saves to drafts collection
  - Allows resume on return
  - Deleted after submit
end note

@enduml

@startuml Registration_State_Flow

title Student Registration State Flow

[*] --> ViewLandingPage

state "View Landing Page" as ViewLandingPage {
    [*] --> ShowSchoolProfile
    ShowSchoolProfile --> ShowPPDBInfo
    ShowPPDBInfo --> ShowRequirements
    ShowRequirements --> ShowFAQ
}

ViewLandingPage --> CheckAuth : Click "Daftar"

state "Check Authentication" as CheckAuth
CheckAuth --> Login : Not logged in
CheckAuth --> StartRegistration : Already logged in

Login --> StartRegistration : After login

state "Registration Wizard" as StartRegistration {
    [*] --> Step1Personal
    
    state "Step 1: Personal Data" as Step1Personal {
        [*] --> FillPersonal
        FillPersonal --> ValidatePersonal
        ValidatePersonal --> FillPersonal : Invalid
        ValidatePersonal --> AutoSave1 : Valid
        AutoSave1 --> [*]
    }
    
    Step1Personal --> Step2Address : Next
    
    state "Step 2: Address" as Step2Address {
        [*] --> FillAddress
        FillAddress --> ShowMap
        ShowMap --> SelectLocation
        SelectLocation --> CalculateDistance
        CalculateDistance --> ValidateAddress
        ValidateAddress --> AutoSave2
        AutoSave2 --> [*]
    }
    
    Step2Address --> Step1Personal : Back
    Step2Address --> Step3Parents : Next
    
    state "Step 3: Parents" as Step3Parents {
        [*] --> FillFather
        FillFather --> FillMother
        FillMother --> FillGuardian
        FillGuardian --> ValidateParents
        ValidateParents --> AutoSave3
        AutoSave3 --> [*]
    }
    
    Step3Parents --> Step2Address : Back
    Step3Parents --> Step4Education : Next
    
    state "Step 4: Education" as Step4Education {
        [*] --> FillEducation
        FillEducation --> UploadGrades
        UploadGrades --> ValidateEducation
        ValidateEducation --> AutoSave4
        AutoSave4 --> [*]
    }
    
    Step4Education --> Step3Parents : Back
    Step4Education --> Step5Achievements : Next
    
    state "Step 5: Achievements" as Step5Achievements {
        [*] --> AddAchievement
        AddAchievement --> UploadCertificate
        UploadCertificate --> AddMore
        AddMore --> AddAchievement : Add another
        AddMore --> AutoSave5 : Done
        AutoSave5 --> [*]
    }
    
    Step5Achievements --> Step4Education : Back
    Step5Achievements --> Review : Next
    
    state "Review" as Review {
        [*] --> ShowAllData
        ShowAllData --> CheckData
        CheckData --> EditStep : Need changes
        CheckData --> ConfirmSubmit : All correct
    }
    
    Review --> Step1Personal : Edit Step 1
    Review --> Step2Address : Edit Step 2
    Review --> Step3Parents : Edit Step 3
    Review --> Step4Education : Edit Step 4
    Review --> Step5Achievements : Edit Step 5
}

StartRegistration --> Submit : Confirm

state "Submit Application" as Submit {
    [*] --> FinalValidation
    FinalValidation --> CreateApplication
    CreateApplication --> DeleteDraft
    DeleteDraft --> SendEmail
    SendEmail --> [*]
}

Submit --> Success : Success
Submit --> Error : Error

Success --> [*]
Error --> StartRegistration : Try again

note right of Step1Personal
  **Auto-Save:**
  Triggered after each step
  validation passes
end note

note right of Review
  **Can edit any step:**
  Changes trigger re-validation
  and auto-save
end note

@enduml
