name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-title-check:
    name: Check PR Title
    runs-on: ubuntu-latest

    steps:
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false

  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Check formatting
        run: npm run format:check

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=test" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=test.firebaseapp.com" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=test" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=test.appspot.com" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=123456" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=test-app-id" >> .env.local

      - name: Build project
        run: npm run build

  pr-size-check:
    name: Check PR Size
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check changed files
        id: changed-files
        run: |
          FILES_CHANGED=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | wc -l)
          LINES_CHANGED=$(git diff --stat ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | tail -1 | grep -oP '\d+ insertions?' | grep -oP '\d+' || echo 0)
          echo "files=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "lines=$LINES_CHANGED" >> $GITHUB_OUTPUT

      - name: Comment PR size
        uses: actions/github-script@v7
        with:
          script: |
            const files = ${{ steps.changed-files.outputs.files }};
            const lines = ${{ steps.changed-files.outputs.lines }};
            
            let size = 'Small';
            let emoji = '‚úÖ';
            
            if (files > 30 || lines > 500) {
              size = 'Large';
              emoji = '‚ö†Ô∏è';
            } else if (files > 10 || lines > 200) {
              size = 'Medium';
              emoji = 'üìù';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${emoji} **PR Size: ${size}**\n\n- Files changed: ${files}\n- Lines changed: ~${lines}\n\n${size === 'Large' ? '‚ö†Ô∏è Consider breaking this into smaller PRs for easier review.' : ''}`
            })

  pr-label:
    name: Auto Label PR
    runs-on: ubuntu-latest

    steps:
      - name: Label PR
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
